# # %>%addPolygons(data=polygons,stroke = F, smoothFactor = 0.1, fillOpacity = 1, fillColor = ~qpal(as.factor(as.factor(advisoryFiltData$Advisory.Level))))
#
#
basemap
library()
library(reticulate)
install.packages(reticulate)
install.packages('reticulate')
library(reticulate)
repl_python()
y
x=3
exit
py$x
library(ggplot2)
# create dummy data
data <- data.frame(
name=letters[1:5],
value=sample(seq(4,15),5),
sd=c(1,0.2,3,2,4)
)
# Most basic error bar
ggplot(data) +
geom_bar( aes(x=name, y=value), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=name, ymin=value-sd, ymax=value+sd), width=0.4, colour="orange", alpha=0.9, size=1.3)
setwd('C:/Users/Shubhayu/OneDrive - Johns Hopkins/Shubhayu_Projects/Johns Hopkins University/ICU Motion Study/bims/scripts')
data <- read.csv('../plots/2020-04-30/test_SVM_12mo.csv')
View(data)
data <- read.csv('../plots/2020-04-30/test_SVM_12mo.csv',row.names = TRUE)
data <- read.csv('../plots/2020-04-30/test_SVM_12mo.csv',row.names = 1)
View(data)
data <- read.csv('../plots/2020-04-30/test_SVM_12mo.csv') %>% rename(Model.Covariates = 1)
library(tidyverse)
data <- read.csv('../plots/2020-04-30/test_SVM_12mo.csv') %>% rename(Model.Covariates = 1)
View(data)
View(data)
directory <- '../plots/2020-04-30/test_SVM_12mo.csv'
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
View(data)
View(curr_data)
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="AUC (std.dev)",title = "")
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="AUC (std.dev)",title = "")+
scale_y_discrete(limits=seq(0,1,.25))
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="",y="AUC (std.dev)",title = "")
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = "")
curr_data$Model.Covariates[1]
curr_data$Model.Covariates[1]
curr_data$Model.Covariates
curr_data$Model.Covariates[1,]
curr_data$Model.Covariates[1]
tail(curr_data$Model.Covariates[1],3)
tail(curr_data$Model.Covariates[1])
tail(as.character(curr_data$Model.Covariates[1]))
tail(as.character(curr_data$Model.Covariates[1]),1)
tail(as.character(curr_data$Model.Covariates[1]))
as.character(curr_data$Model.Covariates[1])
substr(as.character(curr_data$Model.Covariates[1]),-3)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
substr(X, nchar(X) - n_last + 1, nchar(X))
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - n_last))
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - n_last))
View(curr_data)
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - n_last - 1))
View(curr_data)
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data<curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - n_last))
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - n_last))
View(curr_data)
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
View(curr_data)
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = "")
ggplot(curr_data) +
geom_bar( aes(x=Model.Covariates, y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=Model.Covariates, ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used (Time of Day Motion Features, GOSE-Trained, Predicting Favorable)
substr(as.character(curr_data$Model.Covariates[1]),))
)
)
)
)
)
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used (Time of Day Motion Features, GOSE-Trained, Predicting Favorable)"))
curr_data <- read.csv(directory) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: AUC by Predictors Used (Time of Day Motion Features, GOSE-Trained, Predicting Favorable)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: (Time of Day MF, GOSE-Trained, Predicting Fav)"))
View(curr_data)
?reorder
reorder(curr_data$Model.Covariates,-curr_data$tod_GOSE_test_val.mean)
View(curr_data)
View(curr_data)
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,"Models: (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
View(curr_data)
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), y=tod_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), ymin=tod_fav_test_val.mean-tod_fav_test_val.stddev, ymax=tod_fav_test_val.mean+tod_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), y=tod_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), ymin=tod_death_test_val.mean-tod_death_test_val.stddev, ymax=tod_death_test_val.mean+tod_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), y=tfr_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), ymin=tfr_GOSE_test_val.mean-tfr_GOSE_test_val.stddev, ymax=tfr_GOSE_test_val.mean+tfr_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), y=tfr_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), ymin=tfr_fav_test_val.mean-tfr_fav_test_val.stddev, ymax=tfr_fav_test_val.mean+tfr_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), y=tfr_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), ymin=tfr_death_test_val.mean-tfr_death_test_val.stddev, ymax=tfr_death_test_val.mean+tfr_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting Fav)"))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), y=tfr_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), ymin=tfr_death_test_val.mean-tfr_death_test_val.stddev, ymax=tfr_death_test_val.mean+tfr_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Death-Trained, Predicting Death)"))
View(curr_data)
DirCSV<-directory
substr(DirCSV, nchar(DirCSV) - 4 + 1, nchar(DirCSV))
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4 + 1)
OutcomeType
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
curr_data <- read.csv(DirCSV) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), y=tod_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), ymin=tod_fav_test_val.mean-tod_fav_test_val.stddev, ymax=tod_fav_test_val.mean+tod_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
DirCSV
list.files(pattern="../plots/2020-04-30/*.csv")
list.files(pattern="../plots/2020-04-30/*.csv")
list.files(path="../plots/2020-04-30/,",pattern="*.csv")
list.files(path="../plots/2020-04-30/",pattern="*.csv")
i in list.files(path="../plots/2020-04-30/",pattern="*.csv")
substr(test_SVM_12mo.csv, 1, nchar(test_SVM_12mo.csv) - n_last + 1)
substr("test_SVM_12mo.csv", 1, nchar("test_SVM_12mo.csv") - 4 + 1)
substr("test_SVM_12mo.csv", 1, nchar("test_SVM_12mo.csv") - 4)
library(ggplot)
library(tidyverse)
source("./functions/generateRootDir.R")
plot_AUC_Barplots <- function(DirCSV,newDirName,height = 500, width = 650) {
rootDir<-generateRootDir(file.path("AUC_barplots",newDirName))
curr_data <- read.csv(DirCSV) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), y=tod_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), ymin=tod_fav_test_val.mean-tod_fav_test_val.stddev, ymax=tod_fav_test_val.mean+tod_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_Fav_Fav.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), y=tod_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), ymin=tod_death_test_val.mean-tod_death_test_val.stddev, ymax=tod_death_test_val.mean+tod_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tod_Death_Death.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), y=tfr_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), ymin=tfr_GOSE_test_val.mean-tfr_GOSE_test_val.stddev, ymax=tfr_GOSE_test_val.mean+tfr_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), y=tfr_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), ymin=tfr_fav_test_val.mean-tfr_fav_test_val.stddev, ymax=tfr_fav_test_val.mean+tfr_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_Fav_Fav.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), y=tfr_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), ymin=tfr_death_test_val.mean-tfr_death_test_val.stddev, ymax=tfr_death_test_val.mean+tfr_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tfr_Death_Death.png")
png(file = fileName,
width = width,
height = height,
res = 300,
pointsize = ptSize)
print(viz)
dev.off()
}
for (i in list.files(path="../plots/2020-04-30/",pattern="*.csv")){
curr_Path <- file.path("../plots/2020-04-30/",i)
currName <- substr(i, 1, nchar(i) - 4)
plot_AUC_Barplots(curr_Path,currName)
}
library(ggplot)
library(tidyverse)
source("./functions/generateRootDir.R")
plot_AUC_Barplots <- function(DirCSV,newDirName,height = 500, width = 650) {
rootDir<-generateRootDir(file.path("AUC_barplots",newDirName))
curr_data <- read.csv(DirCSV) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), y=tod_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_test_val.mean), ymin=tod_GOSE_test_val.mean-tod_GOSE_test_val.stddev, ymax=tod_GOSE_test_val.mean+tod_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), y=tod_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_fav_test_val.mean), ymin=tod_fav_test_val.mean-tod_fav_test_val.stddev, ymax=tod_fav_test_val.mean+tod_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_Fav_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), y=tod_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_death_test_val.mean), ymin=tod_death_test_val.mean-tod_death_test_val.stddev, ymax=tod_death_test_val.mean+tod_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tod_Death_Death.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), y=tfr_GOSE_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_GOSE_test_val.mean), ymin=tfr_GOSE_test_val.mean-tfr_GOSE_test_val.stddev, ymax=tfr_GOSE_test_val.mean+tfr_GOSE_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), y=tfr_fav_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_fav_test_val.mean), ymin=tfr_fav_test_val.mean-tfr_fav_test_val.stddev, ymax=tfr_fav_test_val.mean+tfr_fav_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_Fav_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), y=tfr_death_test_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_death_test_val.mean), ymin=tfr_death_test_val.mean-tfr_death_test_val.stddev, ymax=tfr_death_test_val.mean+tfr_death_test_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tfr_Death_Death.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
}
for (i in list.files(path="../plots/2020-04-30/",pattern="*.csv")){
curr_Path <- file.path("../plots/2020-04-30/",i)
currName <- substr(i, 1, nchar(i) - 4)
plot_AUC_Barplots(curr_Path,currName)
}
for (i in list.files(path="../plots/2020-04-30/",pattern="^test.*csv")){
curr_Path <- file.path("../plots/2020-04-30/",i)
currName <- substr(i, 1, nchar(i) - 4)
plot_AUC_Barplots(curr_Path,currName)
}
library(ggplot)
library(tidyverse)
source("./functions/generateRootDir.R")
plot_AUC_Barplots <- function(DirCSV,newDirName,height = 500, width = 650) {
rootDir<-generateRootDir(file.path("AUC_barplots",newDirName))
curr_data <- read.csv(DirCSV) %>% rename(Model.Covariates = 1)
X<-as.character(curr_data$Model.Covariates[1])
n_last <- 3
ModelType<-toupper(substr(X, nchar(X) - n_last + 1, nchar(X)))
OutcomeType <- substr(DirCSV, nchar(DirCSV) - 8 + 1, nchar(DirCSV) - 4)
curr_data<-curr_data %>% mutate(Model.Covariates = substr(as.character(Model.Covariates),1,nchar(as.character(Model.Covariates)) - (n_last+1)))
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_GOSE_self_val.mean), y=tod_GOSE_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_GOSE_self_val.mean), ymin=tod_GOSE_self_val.mean-tod_GOSE_self_val.stddev, ymax=tod_GOSE_self_val.mean+tod_GOSE_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_fav_self_val.mean), y=tod_fav_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_fav_self_val.mean), ymin=tod_fav_self_val.mean-tod_fav_self_val.stddev, ymax=tod_fav_self_val.mean+tod_fav_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tod_Fav_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tod_death_self_val.mean), y=tod_death_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tod_death_self_val.mean), ymin=tod_death_self_val.mean-tod_death_self_val.stddev, ymax=tod_death_self_val.mean+tod_death_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time of Day MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tod_Death_Death.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_GOSE_self_val.mean), y=tfr_GOSE_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_GOSE_self_val.mean), ymin=tfr_GOSE_self_val.mean-tfr_GOSE_self_val.stddev, ymax=tfr_GOSE_self_val.mean+tfr_GOSE_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, GOSE-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_GOSE_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_fav_self_val.mean), y=tfr_fav_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_fav_self_val.mean), ymin=tfr_fav_self_val.mean-tfr_fav_self_val.stddev, ymax=tfr_fav_self_val.mean+tfr_fav_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Fav-Trained, Predicting",OutcomeType,"Fav)"))
fileName <- file.path(rootDir,"tfr_Fav_Fav.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
viz<-ggplot(curr_data) +
geom_bar( aes(x=reorder(Model.Covariates,-tfr_death_self_val.mean), y=tfr_death_self_val.mean), stat="identity", fill="skyblue", alpha=0.7) +
geom_errorbar( aes(x=reorder(Model.Covariates,-tfr_death_self_val.mean), ymin=tfr_death_self_val.mean-tfr_death_self_val.stddev, ymax=tfr_death_self_val.mean+tfr_death_self_val.stddev), width=0.4, colour="orange", alpha=0.9, size=1.3)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
labs(x="Predictors used in model",y="AUC (std.dev)",title = paste(ModelType,": (Time from Recording MF, Death-Trained, Predicting",OutcomeType,"Death)"))
fileName <- file.path(rootDir,"tfr_Death_Death.png")
png(file = fileName,
width = width,
height = height)
print(viz)
dev.off()
}
for (i in list.files(path="../plots/2020-04-30/",pattern="^self.*csv")){
curr_Path <- file.path("../plots/2020-04-30/",i)
currName <- substr(i, 1, nchar(i) - 4)
plot_AUC_Barplots(curr_Path,currName)
}
