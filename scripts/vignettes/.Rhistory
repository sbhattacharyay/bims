plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=auc_stats[y,])
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
e<-sapply(c(1:2), function(y) sapply(c(1:3), function(x) textGrob("Mean AUC: ",round(mean(b[c(1,4,6)][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(b[c(1,4,6)][[x]][[y]]$fold.AUC),2),")",gp=gpar(col=col_vector[x]))))
View(e)
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste(auc_stats[y,], collapse=' | ')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
install.packages("crayon")
library(crayon)
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste(red(auc_stats[y,1]),green(auc_stats[y,2]),blue(auc_stats[y,3]), collapse='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
library(lolR)
library(R.matlab)
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
library(readr)
library(purrr)
library(tibble)
library(stringr)
library(forcats)
library(readxl)
library(plotly)
library(naniar)
library(MASS)
library(glmnet)
library(caret)
library(kernlab)
library(rlist)
library(nnet)
library(e1071)
library(randomForest)
library(foreach)
library(gridExtra)
library(ggplotify)
library(precrec)
library(cvAUC)
library(grid)
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste(auc_stats[y,])))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste(auc_stats[y,], collapse='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('cm: ','cf only: ', 'mf only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste(auc_stats[y,], collapse='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('cm: ','cf only: ', 'mf only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',auc_stats[y,], collapse='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('cm: ','cf only: ', 'mf only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'))))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('cm: ','cf only: ', 'mf only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), collapse='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('cm: ','cf only: ', 'mf only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
runApp()
runApp()
runApp()
runApp()
runApp()
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3, asp=1)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, asp=1, add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3,pty="s")
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, pty="s",add=TRUE)
par(new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
par(pty="s",new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
par(pty="s",new=T)
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE, asp=1)
par(pty="s",new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
get_auc_plots <- function(auc_info){
val<-names(auc_info[[1]])
col_vector=c('red','green','blue')
name_vector=c('CM: ','CF only: ', 'MF only: ')
plot_sep<-list(c(1,4,6),c(2,4,7),c(3,5,8))
plots <- vector(mode = "list", length = length(plot_sep))
i = 1
for (z in plot_sep){
auc_stats<<-sapply(seq_along(z), function(x) {
sapply(seq_along(auc_info[z][[1]]), function(y) {
paste(name_vector[x],round(mean(auc_info[z][[x]][[y]]$fold.AUC),2), "(+/-",round(sd(auc_info[z][[x]][[y]]$fold.AUC),2),")")
})
})
lapply(seq_along(auc_info[z][[1]]), function(y){
plots[[i]][[y]]<<-arrangeGrob(as.grob(function()
sapply(seq_along(auc_info[z]), function(x) {
plot(auc_info[z][[x]][[y]]$perf,col='grey',lty=3)
plot(auc_info[z][[x]][[y]]$perf,avg="vertical",col=col_vector[x], lwd=2, add=TRUE, asp=1, xlim=range(0,1), ylim=range(0:1))
par(pty="s",new=T)
})
),top=textGrob(val[y],vjust = 1.5, gp = gpar(fontface = "bold", cex = 1.5)),
bottom=textGrob(paste('Mean AUC (+/-1 SD)',paste(auc_stats[y,], collapse='\n'), sep='\n')))
par(new=F)
})
i=i+1
}
return(plots)
}
d<-get_auc_plots(b)
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3))
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3, width=1, height=1))
do.call(grid.arrange, c(d[[1]],d[[2]],d[[3]], as.table=F, ncol=3,respect=TRUE))
runApp()
shiny::runApp()
runApp()
